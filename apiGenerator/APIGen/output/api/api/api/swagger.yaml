---
swagger: "2.0"
info:
  description: "This is a sample server Game App for APIGen project of OAF."
  version: "1.0.2"
  title: "Test Game App"
  contact:
    email: "oamatf@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "login"
  description: "Login to the App"
- name: "GameSystem"
  description: "Game System ans properties"
- name: "videogame"
  description: "Game name and properties"
schemes:
- "http"
- "https"
paths:
  /login:
    get:
      tags:
      - "login"
      summary: "Returns 'APIKey'"
      description: "Returns 'APIKey' to the caller Login"
      operationId: "login"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "user"
        in: "query"
        description: "login user"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "login password"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "Login"
  /gamesystems:
    get:
      tags:
      - "GameSystem"
      summary: "game system list"
      description: "get the game system list"
      operationId: "getAllGameSystems"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetGameSystemListResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "GameSystem"
    post:
      tags:
      - "GameSystem"
      description: "add a new game system to the list"
      operationId: "createGameSystem"
      parameters:
      - in: "body"
        name: "gamesystem"
        description: "The Game System to create."
        required: false
        schema:
          $ref: "#/definitions/GameSystem"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/GetGameSystemResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "GameSystem"
  /gamesystems/{id}:
    get:
      tags:
      - "GameSystem"
      description: "get a game system"
      operationId: "getOneGameSystemById"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetGameSystemResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "GameSystem"
    put:
      tags:
      - "GameSystem"
      description: "update a game system"
      operationId: "updateGameSystem"
      parameters:
      - name: "id"
        in: "path"
        description: "game system id"
        required: true
        type: "string"
      - in: "body"
        name: "gamesystem"
        description: "The Game System to update."
        required: false
        schema:
          $ref: "#/definitions/GameSystem"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetGameSystemResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "GameSystem"
    delete:
      tags:
      - "GameSystem"
      description: "delete a game system"
      operationId: "deleteGameSystem"
      parameters:
      - name: "id"
        in: "path"
        description: "game system id"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "GameSystem"
  /videogames:
    get:
      tags:
      - "VideoGame"
      description: "get the game list"
      operationId: "getAllVideoGames"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "developer"
        in: "query"
        required: false
        type: "string"
      - name: "gamesystem"
        in: "query"
        required: false
        type: "string"
      - name: "genre"
        in: "query"
        required: false
        type: "string"
      - name: "year"
        in: "query"
        required: false
        type: "number"
      - name: "sort"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetVideoGameListResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
    post:
      tags:
      - "VideoGame"
      description: "add a new game system to the list"
      operationId: "createVideoGame"
      parameters:
      - in: "body"
        name: "videogame"
        description: "The videogame to create."
        required: false
        schema:
          $ref: "#/definitions/VideoGame"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
  /videogames/{id}:
    get:
      tags:
      - "VideoGame"
      description: "get a videogame"
      operationId: "getOneVideoGameById"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
    put:
      tags:
      - "VideoGame"
      description: "update a video game"
      operationId: "updateVideoGame"
      parameters:
      - name: "id"
        in: "path"
        description: "videogame id"
        required: true
        type: "string"
      - in: "body"
        name: "videogame"
        description: "The videogame to update."
        required: false
        schema:
          $ref: "#/definitions/VideoGame"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
    delete:
      tags:
      - "VideoGame"
      description: "delete a videogame"
      operationId: "deleteVideoGame"
      parameters:
      - name: "id"
        in: "path"
        description: "videogame id"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
  /videogamesdev/{developer}:
    get:
      tags:
      - "VideoGame"
      description: "get a videogame By Developer"
      operationId: "getVideogamesByDev"
      parameters:
      - name: "developer"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "VideoGame"
  /swagger:
    x-swagger-pipe: "swagger_raw"
definitions:
  LoginResponse:
    required:
    - "apikey"
    properties:
      apikey:
        type: "string"
    example:
      apikey: "apikey"
  GameSystem:
    type: "object"
    required:
    - "description"
    - "name"
    properties:
      name:
        type: "string"
        description: "Name of the game system"
      description:
        type: "string"
        description: "Description of the game system"
      image:
        type: "string"
        description: "Description of the game system image"
  GetGameSystemResponse:
    type: "object"
    required:
    - "description"
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        description: "identifier"
      name:
        type: "string"
        description: "Name of the game system"
      description:
        type: "string"
        description: "Description of the game system"
      image:
        type: "string"
        description: "Description of the game system image"
    example:
      image: "image"
      name: "name"
      description: "description"
      id: "id"
  GetGameSystemListResponse:
    required:
    - "gamesystems"
    properties:
      gamesystems:
        type: "array"
        items:
          $ref: "#/definitions/GetGameSystemResponse"
    example:
      gamesystems:
      - image: "image"
        name: "name"
        description: "description"
        id: "id"
      - image: "image"
        name: "name"
        description: "description"
        id: "id"
  VideoGame:
    type: "object"
    required:
    - "developer"
    - "gamesystem"
    - "genre"
    - "name"
    - "year"
    properties:
      name:
        type: "string"
        description: "Name of the game"
      developer:
        type: "string"
        description: "Developer/Publisher of the game"
      gamesystem:
        type: "string"
        description: "Name of the game system"
      genre:
        type: "string"
        description: "Name of the genre/style of the game"
      year:
        type: "number"
        description: "Release year"
      image:
        type: "string"
        description: "Description of the game system image"
  GetVideoGameResponse:
    type: "object"
    required:
    - "developer"
    - "gamesystem"
    - "genre"
    - "id"
    - "name"
    - "year"
    properties:
      id:
        type: "string"
        description: "identifier"
      name:
        type: "string"
        description: "Name of the game"
      developer:
        type: "string"
        description: "Developer of the game"
      gamesystem:
        type: "string"
        description: "Name of the game system"
      genre:
        type: "string"
        description: "Name of the genre of the game"
      year:
        type: "number"
        description: "Release year"
      image:
        type: "string"
        description: "Description of the game system image"
    example:
      image: "image"
      year: 2021
      name: "name"
      genre: "genre"
      developer: "developer"
      id: "id"
      gamesystem: "gamesystem"
  GetVideoGameListResponse:
    required:
    - "videogames"
    properties:
      videogames:
        type: "array"
        items:
          $ref: "#/definitions/GetVideoGameResponse"
    example:
      videogames:
      - image: "image"
        year: 2021
        name: "name"
        genre: "genre"
        developer: "developer"
        id: "id"
        gamesystem: "gamesystem"
      - image: "image"
        year: 2021
        name: "name"
        genre: "genre"
        developer: "developer"
        id: "id"
        gamesystem: "gamesystem"
  GeneralResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
    example:
      message: "message"
  ErrorResponse:
    type: "object"
    properties:
      error:
        $ref: "#/definitions/ErrorIntResponse"
  ErrorIntResponse:
    required:
    - "message"
    properties:
      code:
        type: "number"
      message:
        type: "string"
      description:
        type: "string"
